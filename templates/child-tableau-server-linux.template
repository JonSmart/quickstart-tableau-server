AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template: Tableau Server running on Linux (AmazonLinux2)'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: AWS Environment and Machine Configuration
        Parameters:
          - VPCId
          - PublicSubnetId
          - InstanceType
          - LatestAmiId
          - KeyPairName
          - IamInstanceProfile
          - SecurityGroup
          - S3Bucket
          - TableauServerTargetGroupArn
          - TsmTargetGroupArn
      - Label:
          default: Secrets
        Parameters:
          - TableauServerAdminUser
          - TableauServerAdminPassword
          - TsmUsername
          - TsmPassword
          - LicenseKey
      - Label:
          default: Registration
        Parameters:
          - AcceptEULA
          - RegFirstName
          - RegLastName
          - RegEmail
          - RegCompany
          - RegTitle
          - RegDepartment
          - RegIndustry
          - RegPhone
          - RegCity
          - RegState
          - RegZip
          - RegCountry
    ParameterLabels:
      VPCId:
        default: Target VPC
      PublicSubnetId:
        default: Target Public Subnet
      InstanceType:
        default: EC2 instance type for Tableau Server
      LatestAmiId: 
        default: Use the latest version of Amazon Linux 2 (don't change this)
      KeyPairName:
        default: Key Pair Name
      IamInstanceProfile:
        default: IAM Role/Profile for the EC2 instance
      SecurityGroup:
        default: Security Group for EC2 instance
      TableauServerTargetGroupArn:
        default: Load Balancer (Tableau Server) Target Group ARN
      TsmTargetGroupArn:
        default: Load Balancer (Tableau TSM) Target Group ARN
      S3Bucket:
        default: S3 bucket for Tableau Server files
      TableauServerAdminPassword:
        default: Tableau Server administrator password
      TableauServerAdminUser:
        default: Tableau Server administrator username
      TsmUsername:
        default: Tableau Services Manager (TSM) administrator username
      TsmPassword:
        default: Tableau Services Manager (TSM) administrator password
      LicenseKey:
        default: Tableau Activation Key
      AcceptEULA:
        default: Accept Tableau End User License Agreement
      RegCity:
        default: City
      RegCompany:
        default: Company
      RegCountry:
        default: Country
      RegDepartment:
        default: Department
      RegEmail:
        default: Email Address
      RegFirstName:
        default: First Name
      RegIndustry:
        default: Industry
      RegLastName:
        default: Last Name
      RegPhone:
        default: Phone
      RegState:
        default: State
      RegTitle:
        default: Title
      RegZip:
        default: Zip/Postal Code
Parameters:
  AcceptEULA:
    AllowedPattern: 'yes'
    AllowedValues:
      - 'yes'
      - 'no'
    Description: 'View the EULA at the Link: https://www.tableau.com/eula'
    Type: String
    Default: 'yes'
  InstanceType:
    AllowedValues:
      - m6i.4xlarge
      - m6i.8xlarge
      - m6i.12xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: m5.8xlarge
    Description: Amazon EC2 instance type
    Type: String
  KeyPairName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    Default: Takashi-terraform
  S3Bucket:
    Description: Name of the S3 bucket for Tableau Server
    Type: String
    Default: tableau-server-data-bucket
  SecurityGroup:
    Description: Security Group for Tableau Server
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-072811ddfd09a87c2
  IamInstanceProfile:
    Description: Tableau server IAM Instance Profile name
    Type: String
    Default: tableau-server-ec2-iam-profile
  VPCId:
    Description: The ID of the VPC into which to deploy the cluster
    Type: AWS::EC2::VPC::Id
    Default: vpc-052f5d9004acf9698
  PublicSubnetId:
    Description: The public subnet to use
    Type: AWS::EC2::Subnet::Id
    Default: subnet-03cd6fd1afe19da42
  TableauServerTargetGroupArn:
    Description: ARN for Tableau Server's load balancer target group
    Type: String
    Default: arn:aws:elasticloadbalancing:us-west-2:068985051027:targetgroup/Tableau-Server-TG/ff8e731518af64f1
  TsmTargetGroupArn:
    Description: ARN for Tableau TSM's load balancer target group
    Type: String
    Default: arn:aws:elasticloadbalancing:us-west-2:068985051027:targetgroup/TSM-TG/a8a696b772bf75f8
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  TableauServerAdminPassword:
    Description: The password of the initial administrator for Tableau Server
    MinLength: '1'
    NoEcho: 'true'
    Type: String
    Default: tableau
  TableauServerAdminUser:
    Description: The name of the initial administrator for Tableau Server
    MinLength: '1'
    Type: String
    Default: tabmin
  LicenseKey:
    Description: License Key (leave blank for trial)
    Type: String
    Default: ''
  TsmUsername:
    AllowedPattern: ^(?!(tableau|tsmagent|admin|root)$)[A-Za-z0-9]+$
    Description: Tableau Services Manager (TSM) administrator username (cannot be
      'tableau' or 'tsmagent' or 'admin' or 'root')
    MaxLength: '30'
    Type: String
    Default: tabmin
  TsmPassword:
    Description: Tableau Services Manager (TSM) administrator password
    MinLength: '6'
    NoEcho: 'true'
    Type: String
    Default: tableau
  RegCity:
    Description: City
    Type: String
    Default: Hoboken
  RegCompany:
    Description: Company
    Type: String
    Default: Salesforce
  RegCountry:
    Description: Country
    Type: String
    Default: USA
  RegDepartment:
    Description: Department
    Type: String
    Default: quickstart
  RegEmail:
    Description: Email
    MinLength: '1'
    Type: String
    Default: tbinns@salesforce.com
  RegFirstName:
    Description: First Name
    MinLength: '1'
    Type: String
    Default: T
  RegIndustry:
    Description: Industry
    Type: String
    Default: tech
  RegLastName:
    Description: Last Name
    MinLength: '1'
    Type: String
    Default: B
  RegPhone:
    Description: Phone
    Type: String
    Default: 1234567890
  RegState:
    Description: State
    Type: String
    Default: NJ
  RegTitle:
    Description: Title
    Type: String
    Default: None
  RegZip:
    Description: ZIP/Postal Code
    Type: String
    Default: 00000
Mappings:
  DefaultConfiguration:
    Aws:
      CloudwatchLogGroup: TableauServerLogs
      S3BackupPath: backups
    InstallationConfig:
      TableauServerInstaller: https://www.tableau.com/downloads/server/rpm
      AutomatedInstaller: https://raw.githubusercontent.com/tableau/server-install-script-samples/master/linux/automated-installer/automated-installer
      PostgreSqlJdbc: https://downloads.tableau.com/drivers/linux/postgresql/postgresql-42.2.14.jar
      InstallationTimeout: PT1H45M
    Scripts:
      Backup: https://raw.githubusercontent.com/takashibinns/quickstart-tableau-server/main/scripts/backup-to-s3.sh
      Restore: https://raw.githubusercontent.com/takashibinns/quickstart-tableau-server/main/scripts/restore-from-s3.sh
      UpdateLoadBalancer: https://raw.githubusercontent.com/takashibinns/quickstart-tableau-server/main/scripts/update-load-balancer.sh
    MachineConfiguration:
      SystemVolumeSize: 100
      AmazonLinux: AmazonLinux2
      Name: Tableau Server Quickstart
Conditions:
  IsTrial: !Equals
    - ''
    - !Ref 'LicenseKey'
Resources:
  TableauServerEC2:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          setup:
            - step1
            - step2
            - step3
            - step4
        step1:
          packages:
            rpm:
              epel-release: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
            yum:
              awscli: []
          commands:
            a: 
              command: hostnamectl set-hostname $(hostnamectl --static) && echo "Setting static hostname"
            b: 
              command: hostnamectl set-hostname $(hostnamectl --static) && echo "Setting static hostname"
            c:
              command: source /tmp/secrets.properties && echo "sourcing the secrets to env variables"
            d:
              command: !Sub useradd ${TableauServerAdminUser} && echo "Creating TSM user"
            e:
              command:  !Sub echo ${TableauServerAdminPassword} | passwd ${TableauServerAdminUser} --stdin && echo "Setting password for TSM user"
          files:
            /tmp/secrets.properties:
              mode: '640'
              content:
                !Sub |
                  tsm_admin_user='${TsmUsername}'
                  tsm_admin_pass='${TsmPassword}'
                  tableau_server_admin_user='${TableauServerAdminUser}'
                  tableau_server_admin_pass='${TableauServerAdminPassword}'
            /tmp/registration.json:
              content:
                first_name: !Ref 'RegFirstName'
                last_name: !Ref 'RegLastName'
                email: !Ref 'RegEmail'
                company: !Sub '${RegCompany};AWSQuickStart-Linux'
                title: !Ref 'RegTitle'
                department: !Ref 'RegDepartment'
                industry: !Ref 'RegIndustry'
                phone: !Ref 'RegPhone'
                city: !Ref 'RegCity'
                state: !Ref 'RegState'
                zip: !Ref 'RegZip'
                country: !Ref 'RegCountry'
                eula: !Ref 'AcceptEULA'
            /tmp/config.json:
              content:
                !Sub |
                  {"configEntities": {
                      "gatewaySettings": {
                          "_type": "gatewaySettingsType",
                          "port": 80,
                          "firewallOpeningEnabled": true,
                          "sslRedirectEnabled": true,
                          "publicHost": "localhost",
                          "publicPort": 80
                      },
                      "identityStore": {
                          "_type": "identityStoreType",
                          "type": "local"
                      }
                  }}
            /tmp/tableau-server.rpm:
              source: !FindInMap
                - DefaultConfiguration
                - InstallationConfig
                - TableauServerInstaller
            /tmp/automated-installer:
              mode: '550'
              source: !FindInMap
                - DefaultConfiguration
                - InstallationConfig
                - AutomatedInstaller
            /tmp/update-load-balancer.sh:
              mode: 550
              source: !FindInMap
                - DefaultConfiguration
                - Scripts
                - UpdateLoadBalancer
            /tmp/backup-to-s3.sh:
              mode: 550
              source: !FindInMap
                - DefaultConfiguration
                - Scripts
                - Backup  
            /tmp/restore-from-s3.sh:
              mode: 550
              source: !FindInMap
                - DefaultConfiguration
                - Scripts
                - Restore  
            /opt/tableau/tableau_driver/jdbc/postgresql-42.2.22.jar:
              mode: '550'
              source: !FindInMap
                - DefaultConfiguration
                - InstallationConfig
                - PostgreSqlJdbc
        step2:
          commands:
            a: 
              command: !Sub /tmp/automated-installer -a ${TableauServerAdminUser} -f /tmp/config.json -r /tmp/registration.json -s /tmp/secrets.properties ${LicenseKey} -v --accepteula --force /tmp/tableau-server.rpm  && echo "Installing Tableau Server"
        step3:
          commands: 
            a: 
              command: !Join [' ', ['./tmp/restore-from-s3.sh', !Ref S3Bucket, !FindInMap ["DefaultConfiguration", "Aws", "S3BackupPath"] ] ] 
        step4:
          commands: 
            a: 
              command: !Join [' ', ['./tmp/update-load-balancer.sh', !Ref TableauServerTargetGroupArn, !Ref AWS::Region, "true" ] ]
        step5:
          commands:
            a: 
              command: rm -f /tmp/secrets.properties && echo "Cleanup secrets.properties"
            b:  
              command: rm -f /tmp/config.json && echo "Cleanup config.json"
            c:  
              command: rm -f /tmp/tableau-server.rpm && echo "Cleanup tableau-server.rpm"
            d:  
              command: rm -f /tmp/automated-installer && echo "Cleanup automated-installer"
            e:  
              command: rm -f /tmp/registration.json && echo "Cleanup registration.json"
    CreationPolicy:
      ResourceSignal:
        Timeout: !FindInMap ["DefaultConfiguration", "InstallationConfig", "InstallationTimeout"]
    Properties:
      SecurityGroupIds:
        - !Ref 'SecurityGroup'
      SubnetId: !Ref 'PublicSubnetId'
      InstanceType: !Ref 'InstanceType'
      IamInstanceProfile: !Ref 'IamInstanceProfile'
      ImageId: !Ref LatestAmiId
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            VolumeSize: !FindInMap
              - DefaultConfiguration
              - MachineConfiguration
              - SystemVolumeSize
      EbsOptimized: true
      KeyName: !Ref 'KeyPairName'
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          # Install/upgrade OS and dependencies
          yum -y upgrade
          yum install -y aws-cfn-bootstrap

          # Rename the ec2 instance
          AWS_INSTANCE_ID=$(curl http://169.254.169.254/latest/meta-data/instance-id)
          NEW_NAME="Tableau Server Quickstart ($(date +%m-%d-%Y))"
          aws ec2 create-tags --resources $AWS_INSTANCE_ID --region ${AWS::Region} --tags Key=Name,Value="$NEW_NAME"
          
          # Run ConfigSet to install Tableau Server
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource TableauServerEC2 --configsets setup --region ${AWS::Region}

          # All done, tell cloudformation we are ready to go!
          /opt/aws/bin/cfn-signal --exit-code 0 --resource TableauServerEC2 --region ${AWS::Region} --stack ${AWS::StackName}
Outputs:
  InstanceID:
    Description: EC2 InstanceID of the instance running Tableau Server
    Value: !Ref 'TableauServerEC2'
  PublicIPAddress:
    Description: Public IP Address of instance running Tableau Server
    Value: !GetAtt 'TableauServerEC2.PublicIp'
